//--- OBJECT WRITE BEGIN ---
%guiContent = new GuiBitmapCtrl(InitGui) {
   wrap = "0";
   isContainer = "1";
   Profile = "GuiDefaultProfile";
   HorizSizing = "right";
   VertSizing = "bottom";
   position = "0 0";
   Extent = "1360 768";
   MinExtent = "8 2";
   canSave = "1";
   Visible = "1";
   tooltipprofile = "GuiToolTipProfile";
   hovertime = "1000";
   canSaveDynamicFields = "1";

   new GuiBitmapCtrl() {
      bitmap = "art/gui/Rotation/chushihua.png";
      wrap = "0";
      isContainer = "0";
      Profile = "GuiDefaultProfile";
      HorizSizing = "right";
      VertSizing = "bottom";
      position = "0 0";
      Extent = "1360 768";
      MinExtent = "8 2";
      canSave = "1";
      Visible = "1";
      tooltipprofile = "GuiToolTipProfile";
      hovertime = "1000";
      canSaveDynamicFields = "0";
   };
   new GuiBitmapDrawPartCtrl(init_point) {
	  bitmap = "art/gui/Rotation/point.png";
      wrap = "1";
      showPart = "0";
      reversal_X = "0";
      isContainer = "0";
      Profile = "GuiDefaultProfile";
      HorizSizing = "right";
      VertSizing = "bottom";
      position = "819 233";
      Extent = "360 60";
      MinExtent = "8 2";
      canSave = "1";
      Visible = "1";
      tooltipprofile = "GuiToolTipProfile";
      hovertime = "1000";
      canSaveDynamicFields = "0";
   };
	new GuiBitmapCtrl(transBrokenShow) {
		bitmap = "art/gui/Rotation/transBroken.png";
		wrap = "0";
		isContainer = "0";
		Profile = "GuiDefaultProfile";
		HorizSizing = "right";
		VertSizing = "bottom";
		position = "-1 -1";
		Extent = "1362 770";
		MinExtent = "8 2";
		canSave = "1";
		Visible = "0";
		tooltipprofile = "GuiToolTipProfile";
		hovertime = "1000";
		canSaveDynamicFields = "0";
	};
};
//--- OBJECT WRITE END ---
$showOtherInofr = true;	//hardware - false
$player1State = -1;		//-1 not in game; 0 dead; 1 in game;
$player2State = -1;		//-1 not in game; 0 dead; 1 in game;
$damagePercent = 1;		//NPC attack player
$attackPercent = 1;		//player attack NPC
$rotateSpeed = 0;
$zhixingTimes = 0;
datablock SFXDescription(jiTaiChuShiHua1)
{
   volume = "0.7";
};

datablock SFXProfile(soundChuShiHua)
{
   fileName = "art/sound/chushihua.ogg";
   description = "jiTaiChuShiHua1";
   preload = "true";
};

function InitGui::onWake( %this )
{
	PCVRSetTwoplayer(true);
	readInforFromGameset();
	flashLight(false);
	flashLightP2(false);
	transBrokenShow.setVisible(false);
	setGunShakeState(0, false);
	setTurnRotation(0, 0);
	$initializeResult = false;
	PCVREnablePcvrProcess(true);
	PCVRBeginInitializePC(true);
	//echo("false      2");
	playerCross.setVisible(false);
	playerCrossP2.setVisible(false);
	
	%this.schedule(10580 + getrandom(400, 3000), waitGui);
	%this.movePoint(1);
	
	//about the keyboard keys
	//schedule(1000, 0, deleteMoveMap);
}

function deleteMoveMap()
{
	if( isObject( touBiMoveMap ) )
	{
		touBiMoveMap.delete();
	}
	new ActionMap(touBiMoveMap);
	
	if ( isObject( moveMap ) )
	{
		moveMap.delete();
	}
	new ActionMap(moveMap);
}

function InitGui::onSleep( %this )
{
	transBrokenShow.setVisible(false);
}

//judge the result of initialization pc
function InitGui::waitGui( %this )
{
	if( !InitGui.isAwake() || PlayGui.isAwake() )
	{
		return;
	}
	else
	{
		if ($showOtherInofr == true) {
			%result=1;//fffffffff
		}
		else {
			%result = PCVRGetInitializePCResult();
		}
		if( %result == 1 || %result == 2)
		{
			if (%result == 1)
			{
				//sucess
				$initializeResult = true;
				schedule(200, 0, StartLevel, $LoadingLevel);
				urgentShow.setBitmap("art/gui/Rotation/open.png");
			}
			else if (%result == 2)
			{
				//failure
				$initializeResult = false;
				transBrokenShow.setVisible(true);
				schedule(1200, 0, StartLevel, $LoadingLevel);
				urgentShow.setBitmap("art/gui/Rotation/broke.png");
			}
			
			PCVRBeginInitializePC(false);
			
			return;
		}
		
		sfxPlayOnce( soundChuShiHua );
		%this.schedule( 1000, waitGui );
	}
}

function InitGui::movePoint( %this, %num )
{
	if( !InitGui.isAwake() || PlayGui.isAwake() || transBrokenShow.isVisible())
	{
		return;
	}
	%num = %num%7;
	init_point.setDrawPartOfBitmap(1, 0, 0, 0, 0, %num*60, 60 );
	%this.schedule( 500, movePoint, %num++ );
}
